name: "Merge request"

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - develop

jobs:
  test_lint:
    name: Type Check And Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16.x

      - name: install dependencies
        run: yarn install

      - name: Type check
        run: yarn type-check

      - name: linting
        run: yarn lint

  test_code:
    name: Testing CI and coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16.x

      - name: install dependencies
        run: yarn install

      - name: test:ci
        run: yarn test:ci

      - name: Get Code coverage
        run: yarn test:cov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=miguel-jardinez 
            -Dsonar.projectKey=miguel-jardinez_amazon_clone_api
            -Dsonar.sources=src
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.verbose=false

        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy_to_vercel:
    needs: test_lint
    name: Deploy application to vercel
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16.x

      - name: install dependencies
        run: yarn install --production

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
